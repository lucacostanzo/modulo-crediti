import { Message, BaseMetadata } from "./types";
import waitForExpect from "wait-for-expect";
declare type PartialMessage = Omit<Message<string, {}>, "global_position" | "position" | "time" | "id" | "metadata"> & {
    time?: Date;
    metadata?: Partial<BaseMetadata>;
};
export declare function pushMessage(message: PartialMessage): {
    globalPosition: number;
    position: any;
    time: Date;
    streamName: string;
};
export declare function getStreamMessages(streamName: string): Message[];
export declare function setupMessageStore(initialMessages?: PartialMessage[]): void;
export declare const serialPromises: <T>(fns: (() => Promise<T>)[]) => Promise<T[]>;
export declare function mockMessageStore(): void;
export declare function expectIdempotency(run: () => Promise<() => void>, expectation: () => void): Promise<void>;
export { waitForExpect };
